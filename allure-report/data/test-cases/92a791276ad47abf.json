{"uid":"92a791276ad47abf","name":"test_login_negative_shows_error[-secret_sauce]","fullName":"tests.test_auth#test_login_negative_shows_error","historyId":"0ddf58633960c03c1c4ad304ebfec89d","time":{"start":1757316478433,"stop":1757316478433,"duration":0},"status":"broken","statusMessage":"TypeError: ChromeDriverManager.__init__() got an unexpected keyword argument 'version'","statusTrace":"request = <SubRequest 'browser' for <Function test_success_login_opens_products_page>>\n\n    @pytest.fixture(scope=\"session\")\n    def browser(request: FixtureRequest) -> Generator[WebDriver, None, None]:\n        browser_name = cast(str, request.config.getoption(\"--browser\")).lower()\n        browser_version = cast(str, request.config.getoption(\"--browser-version\")).strip()\n        remote_url = cast(str, request.config.getoption(\"--remote-url\")).strip()\n    \n        tmp_profile: str | None = None  # чтобы корректно чистить только если был создан\n    \n        if browser_name == \"chrome\":\n            ch_options = ChromeOptions()\n            ch_options.add_argument(\"--window-size=1280,800\")\n            ch_options.add_argument(\"--incognito\")\n            ch_options.add_argument(\"--disable-sync\")\n            ch_options.add_argument(\"--disable-notifications\")\n            ch_options.add_argument(\"--disable-infobars\")\n            ch_options.add_argument(\"--no-first-run\")\n            ch_options.add_argument(\"--no-default-browser-check\")\n            ch_options.add_argument(\"--disable-extensions\")\n            ch_options.add_argument(\"--disable-popup-blocking\")\n            ch_options.add_argument(\"--password-store=basic\")\n    \n            # Чистый пользовательский каталог на каждый запуск\n            tmp_profile = tempfile.mkdtemp(prefix=\"chrome-profile-\")\n            ch_options.add_argument(f\"--user-data-dir={tmp_profile}\")\n    \n            # Максимально глушим менеджер паролей/проверку утечек/автозаполнение\n            ch_options.add_argument(\n                \"--disable-features=\"\n                \"PasswordCheck,PasswordLeakDetection,\"\n                \"PasswordManagerOnboarding,PasswordManagerRedesign,\"\n                \"AutofillServerCommunication,AutofillEnableAccountWalletStorage\",\n            )\n    \n            # Полезные prefs: не предлагать сохранять пароли/карты/профили\n            ch_prefs: dict[str, object] = {\n                \"credentials_enable_service\": False,\n                \"profile.password_manager_enabled\": False,\n                \"autofill.profile_enabled\": False,\n                \"autofill.credit_card_enabled\": False,\n                # на всякий: запрет нотификаций\n                \"profile.default_content_setting_values.notifications\": 2,\n            }\n            ch_options.add_experimental_option(\"prefs\", ch_prefs)\n            ch_options.add_experimental_option(\"excludeSwitches\", [\"enable-automation\", \"enable-logging\"])\n            ch_options.add_experimental_option(\"useAutomationExtension\", False)\n    \n            ch_service = ChromeService(ChromeDriverManager().install())\n            if remote_url:\n                # Remote/Selenoid: версия управляется через capabilities\n                caps = ch_options.to_capabilities()\n                if browser_version:\n                    caps[\"browserVersion\"] = browser_version\n                driver: WebDriver = Remote(command_executor=remote_url, options=ch_options)\n            else:\n                # Локально: ставим нужную версию драйвера (если указана)\n                ch_service = ChromeService(\n>                   ChromeDriverManager(version=browser_version or None).install()\n                )\nE               TypeError: ChromeDriverManager.__init__() got an unexpected keyword argument 'version'\n\nconftest.py:109: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1757316476505,"stop":1757316478212,"duration":1707},"status":"broken","statusMessage":"TypeError: ChromeDriverManager.__init__() got an unexpected keyword argument 'version'\n","statusTrace":"  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\.venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 890, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Users\\zakco\\PycharmProjects\\PythonProject\\conftest.py\", line 109, in browser\n    ChromeDriverManager(version=browser_version or None).install()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_auth"},{"name":"host","value":"Zak"},{"name":"thread","value":"10588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"''"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["negative"]},"source":"92a791276ad47abf.json","parameterValues":["'secret_sauce'","''"]}